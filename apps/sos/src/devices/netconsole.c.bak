struct dev netconsole = {
	.type = DEVICE_CONSOLE,
	.rootname = "console",

	.priority = DEV_PRIORITY_NORMAL,
	.irq = -1,

	.devops = {
		con_open,
		con_close,
		con_read,
		con_write,
		NULL,		/* ioctl */
		NULL,		/* mmap */
		/* other stuff here? */
	}
};

struct serial* serial_device;

/* NOTE: VFS LAYER SHOULD BE HANDLING MULTIPLE READ/SINGLE WRITE ON CHARACTER DEVICES */

#define BUFSIZE		1024

struct serial_buf buffer[BUFSIZE];
int bufpos = 0;
int readpos = 0;
int bufextent = 0;


int con_open (...) {
	if (!serial_device) {
		/* if it's the first time opening the serial */
		serial_device = serial_init();

		if (!serial_device) {
			return false;
		}
	}

	serial_register_handler(serial_device, con_buffer);



	return true;
}

void con_buffer (struct* serial s, char c) {
	if (bufextent == BUFSIZE) {
		/* buffer full */
		break;
	}

	buffer[bufpos] = c;
	bufpos++;
	bufextent++;

	/* rollover */
	if (bufpos == BUFSIZE) {
		bufpos = 0;
	}
}


int con_read () {
	readpos++;
	bufextent--;

	if (readpos == BUFSIZE) {
		readpos = 0;
	}
}